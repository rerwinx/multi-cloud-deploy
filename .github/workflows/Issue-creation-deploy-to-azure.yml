name: Issue Created - Deploy to Azure

# Runs when an issue is created.
on:
  issues:
    types: [opened] 
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "deploy-to-azure"
  deploy-to-azure:
    env:
      WEBAPP_NAME: rerwinx-multicloud-web 
    
    # Check if the Issue title is the one we want from our Issue Template
    if: startsWith(github.event.issue.title, 'Deploy to Azure') 
    
    # TODO: Add an approval process
      
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - name: Starting deployment
        uses: actions/github-script@0.5.0
        env:
          title: ${{ github.event.issue.title }}
          body: ${{ github.event.issue.body }}
        with:
          github-token: ${{secrets.GP_TOKEN}}
          script: |
            const { title, body } = process.env;
            let gprUrl='docker.pkg.github.com/'+context.repo.owner.toLowerCase()+'/'+context.repo.repo.toLowerCase()+'/aspnetapp:latest'
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ðŸ‘‹ @' + context.actor + ', kicking off deployment on Azure of (docker image ' + gprUrl + ' ) now ...'
            })
              
      - name: 'Checkout Github Action' 
        uses: actions/checkout@master
    
      - name: 'Login via Azure CLI'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
    
      - uses: azure/docker-login@v1
        with:
          login-server: docker.pkg.github.com
          username: ${{ github.actor }}
          password: ${{secrets.GP_TOKEN}}
    
      #- run: |
      #    docker pull docker.pkg.github.com/rerwinx/multi-cloud-deploy/aspnetapp:${{ github.sha }}
      
      - uses: azure/webapps-container-deploy@v1
        with:
          app-name: 'rerwinx-aspnetapp'
          images: 'docker.pkg.github.com/rerwinx/multi-cloud-deploy/aspnetapp:${{ github.sha }}'
 
      - name: Create the web app
        env:
          RESOURCE_GROUP: rerwinxmulticloud
          APP_SERVICE_PLAN: rerwinx-multicloud-asp
          DOCKER_USERNAME: ${{ github.actor }}
          DOCKER_PASSWORD: ${{secrets.GP_TOKEN}}
          DOCKER_REGISTRY_URL: docker.pkg.github.com
          PACKAGE_NAME: aspnetapp
        run: |
          az webapp create --resource-group $RESOURCE_GROUP --plan $APP_SERVICE_PLAN --name $WEBAPP_NAME --deployment-container-image-name docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:$GITHUB_SHA --debug
          az webapp config container set --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME --docker-registry-server-password $DOCKER_PASSWORD --docker-registry-server-user $DOCKER_USERNAME --docker-registry-server-url $DOCKER_REGISTRY_URL
          az webapp update -g $RESOURCE_GROUP -n $WEBAPP_NAME --set tags.ref=$GITHUB_REF tags.type=prod
        
      - name: Deploy the container
        uses: azure/webapps-container-deploy@v1
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images: ${{ format('{0}/{1}/{2}:{3}', 'docker.pkg.github.com', github.repository, env.PACKAGE_NAME, github.sha) }}
 
      - name: Azure logout
        run: |
          az logout
      
      - name: Update issue success
        if: (success())
        env:
          issue_number: '${{ github.event.issue.number }}'
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { issue_number} = process.env;
            github.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployed successfully to Azure:' + 'https://rerwinx-aspnetapp.azurewebsites.net/'
            })
            github.issues.addLabels({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['deployed']
            })
        
      - name: Update issue failure
        if: (failure())
        env:
          issue_number: '${{github.event.issue.number}}'
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { issue_number, cloud, gprUrl, customer } = process.env;
            github.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Deployment to Azure failed for ' +  owner + ' :cry:'
            })
