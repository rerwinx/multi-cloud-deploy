name: Deploy to Production

on:
  push:
    branches:
      - master

jobs:

  build:
    name: Build, Test and Package
    runs-on: ubuntu-latest

    steps:
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 3.1.101
        
      - name: Remove dashes from repo name
        id: package-name
        run: |
          export PACKAGE_NAME=$(echo $GITHUB_REPOSITORY | sed 's/-//g' | cut -d/ -f2)
          echo "::set-output name=package_name::$PACKAGE_NAME"
      
      - name: Checkout
        uses: actions/checkout@v1
      
      - run: |
          docker build -t aspnetapp .
          docker tag aspnetapp docker.pkg.github.com/rerwinx/multi-cloud-deploy/aspnetapp:${{ github.sha }}        
          docker push docker.pkg.github.com/rerwinx/multi-cloud-deploy/aspnetapp:${{ github.sha }}
      
      
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:$GITHUB_SHA
        env:
          PACKAGE_NAME: ${{steps.package-name.outputs.package_name }}
      
      - name: Publish to GitHub Package Registry
        env:
          DOCKER_TOKEN: ${{secrets.GP_TOKEN}}
          DOCKER_USER: ${{ github.actor }}
          PACKAGE_NAME: ${{steps.package-name.outputs.package_name }}
        run: |
          docker login docker.pkg.github.com -u $DOCKER_USER -p $DOCKER_TOKEN
          docker push docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:$GITHUB_SHA


  deploy:
    name: Deploy to Azure Container WebApp
    needs: [build]
    env:
      WEBAPP_NAME: ${{ github.event.repository.name }}-prod
    runs-on: ubuntu-latest

    steps:
    - id: package-name
      run: |
        export PACKAGE_NAME=$(echo $GITHUB_REPOSITORY | sed 's/-//g' | cut -d/ -f2)
        echo "::set-output name=package_name::$PACKAGE_NAME"
        
    - name: Checking out the code
      uses: actions/checkout@v1
      
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create the web app
      env:
        RESOURCE_GROUP: rerwinxmulticloud
        APP_SERVICE_PLAN: rerwinx-multicloud-asp
        DOCKER_USERNAME: ${{ github.actor }}
        DOCKER_PASSWORD: ${{secrets.GP_TOKEN}}
        DOCKER_REGISTRY_URL: docker.pkg.github.com
        PACKAGE_NAME: ${{steps.package-name.outputs.package_name }}
      run: |
        az webapp create --resource-group $RESOURCE_GROUP --plan $APP_SERVICE_PLAN --name $WEBAPP_NAME --deployment-container-image-name docker.pkg.github.com/$GITHUB_REPOSITORY/$PACKAGE_NAME:$GITHUB_SHA
        az webapp config container set --resource-group $RESOURCE_GROUP --name $WEBAPP_NAME --docker-registry-server-password $DOCKER_PASSWORD --docker-registry-server-user $DOCKER_USERNAME --docker-registry-server-url $DOCKER_REGISTRY_URL
        az webapp update -g $RESOURCE_GROUP -n $WEBAPP_NAME --set tags.ref=$GITHUB_REF tags.type=prod
        
    - name: Deploy the container
      uses: azure/webapps-container-deploy@v1
      with:
        app-name: ${{ env.WEBAPP_NAME }}
        images: ${{ format('{0}/{1}/{2}:{3}', 'docker.pkg.github.com', github.repository, steps.package-name.outputs.package_name, github.sha) }}
